clear all
close all
clc

small_radius = 9; % 15, 13, 11, 9
large_radius = 250; % 100, 150, 200, 250
user_radius = 65; % 35, 45, 55, 65
thickness = 2.2; % 1.6, 1.8, 2.0, 2.2
cylinder_bottom = -large_radius - 10;
subdivs = 512;
subdivs2 = round(subdivs * ((asin(user_radius / large_radius) - asin(small_radius / large_radius)) / (2 * pi)));

sphereSurface = @(t,u) [...
    large_radius * sin(u) .* sin(t) ...
    large_radius * sin(u) .* cos(t) ...
    large_radius * cos(u) ...
    ];
    
sphereSurface2 = @(t,u) [...
    (large_radius + thickness) * sin(u) .* sin(t) ...
    (large_radius + thickness) * sin(u) .* cos(t) ...
    (large_radius + thickness) * cos(u) ...
    ];
    
outer_phi = pi - asin(user_radius / large_radius);
inner_phi_1 = pi - asin(small_radius / (large_radius + thickness)); 
inner_phi_2 = pi - asin((small_radius - thickness) / large_radius);

cylinderSurface = @(t,u) [...
    (small_radius - thickness) .* sin(t) ...
    (small_radius - thickness) .* cos(t) ...
    u ...
    ];

cylinderSurface2 = @(t,u) [...
    small_radius .* sin(t) ...
    small_radius .* cos(t) ...
    u ...
    ];
    
coneSurface = @(t,u) [...
    u * sin(outer_phi) .* sin(t) ...
    u * sin(outer_phi) .* cos(t) ...
    u * cos(outer_phi) ...
    ];
    
littleSphereSurface = @(t,u) [...
    small_radius * sin(u) .* sin(t) ...
    small_radius * sin(u) .* cos(t) ...
    cylinder_bottom + small_radius * cos(u) ...
    ];
    
littlerSphereSurface = @(t,u) [...
    (small_radius - thickness) * sin(u) .* sin(t) ...
    (small_radius - thickness) * sin(u) .* cos(t) ...
    cylinder_bottom + (small_radius - thickness) * cos(u) ...
    ];
    
##fanSurface = @(t) [...
##    polygon(2,1) .* sin(t) ...
##    polygon(2,2) .* ones(size(t)) ...
##    polygon(2,1) .* cos(t) ...
##    ];


verticesA = generate_cylindrical_surface(sphereSurface, ...
  0, 2 * pi, subdivs, ...
  outer_phi, inner_phi_2, subdivs2);
verticesA = orientation_flip(verticesA);

verticesB = generate_cylindrical_surface(sphereSurface2, ...
  0, 2 * pi, subdivs, ...
  outer_phi, inner_phi_1, subdivs2);
  
verticesC = generate_cylindrical_surface(cylinderSurface, ...
  0, 2 * pi, subdivs, ...
  large_radius * cos(inner_phi_2), cylinder_bottom, 1);
verticesC = orientation_flip(verticesC);

verticesD = generate_cylindrical_surface(cylinderSurface2, ...
  0, 2 * pi, subdivs, ...
  (large_radius + thickness) * cos(inner_phi_1), cylinder_bottom, 1);
  
verticesE = generate_cylindrical_surface(coneSurface, ...
  0, 2 * pi, subdivs, ...
  large_radius, large_radius + thickness, 1);
  
verticesF = generate_cylindrical_surface(littleSphereSurface, ...
  0, 2 * pi, subdivs / 2, ...
  pi/2, pi, subdivs / 8);

verticesG = generate_cylindrical_surface(littlerSphereSurface, ...
  0, 2 * pi, subdivs / 2, ...
  pi/2, pi, subdivs / 8);
verticesG = orientation_flip(verticesG);

vertices = [verticesA; verticesB; verticesC; verticesD; verticesE; verticesF; verticesG];
##verticesF = generate_fan(fanSurface, 0, 2 * pi, subdivs, [0 polygon(1,2) 0]);
##verticesF = orientation_flip(verticesF);
##vertices = [vertices; verticesF];
  
##vertices2 = [generate_cylindrical_surface(polygon2Surface, ...
##  0, 2 * pi, subdivs, ...
##  2, size(polygon2,1), size(polygon2,1)-2)];
%vertices2 = orientation_flip(vertices2);
  
##verticesF = generate_fan(fan2Surface, 0, 2 * pi, subdivs, [0 polygon2(1,2) 0]);
##verticesF = orientation_flip(verticesF);
##vertices2 = [vertices2; verticesF];

##vertices2B = [generate_quad_surface(polygon3Surface, ...
##  3 * pi / 4, 5 * pi / 4, subdivs / 4, ...
##  2, size(polygon3,1), size(polygon3,1)-2)];
##vertices2B = orientation_flip(vertices2B);
##vertices2 = [vertices2; vertices2B];

##vertices = orientation_flip(vertices);
##vertices = [vertices; vertices2];
##  
##verticesB = vertices;
##verticesB(:,2) = -verticesB(:,2);
##verticesB = orientation_flip(verticesB);
##
##vertices = [vertices; verticesB];

fid = fopen('sphere_maker_20_inch.stl','wt');
fprintf(fid, 'solid sphere_maker\n');

for f = 1:(size(vertices,1)/3)
  fprintf(fid, 'facet normal 0.0 0.0 1.0\n');
  fprintf(fid, '    outer loop\n');
  fprintf(fid, '        vertex %.3f %.3f %.3f\n', vertices(3*f-2,:));
  fprintf(fid, '        vertex %.3f %.3f %.3f\n', vertices(3*f-1,:));
  fprintf(fid, '        vertex %.3f %.3f %.3f\n', vertices(3*f,:));
  fprintf(fid, '    endloop\n');
  fprintf(fid, 'endfacet\n');
endfor

fprintf(fid, 'endsolid sphere_maker\n');
fclose(fid)